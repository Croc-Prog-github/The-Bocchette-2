{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import Redis, { Cluster, ClusterNode, ClusterOptions, RedisOptions } from 'ioredis';\nimport { Presence } from '@colyseus/core';\n\ntype Callback = (...args: any[]) => void;\n\nexport class RedisPresence implements Presence {\n    protected sub: Redis | Cluster;\n    protected pub: Redis | Cluster;\n\n    protected subscriptions: { [channel: string]: Callback[] } = {};\n\n    constructor(options?: number | string | RedisOptions | ClusterNode[], clusterOptions?: ClusterOptions) {\n        if (Array.isArray(options)) {\n            this.sub = new Cluster(options, clusterOptions)\n            this.pub = new Cluster(options, clusterOptions);\n\n        } else {\n            this.sub = new Redis(options as RedisOptions);\n            this.pub = new Redis(options as RedisOptions);\n        }\n\n        // no listener limit\n        this.sub.setMaxListeners(0);\n    }\n\n    public async subscribe(topic: string, callback: Callback) {\n        if (!this.subscriptions[topic]) {\n          this.subscriptions[topic] = [];\n        }\n\n        this.subscriptions[topic].push(callback);\n\n        if (this.sub.listeners('message').length === 0) {\n          this.sub.on('message', this.handleSubscription);\n        }\n\n        await this.sub.subscribe(topic);\n\n        return this;\n    }\n\n    public async unsubscribe(topic: string, callback?: Callback) {\n        const topicCallbacks = this.subscriptions[topic];\n        if (!topicCallbacks) { return; }\n\n        if (callback) {\n          const index = topicCallbacks.indexOf(callback);\n          topicCallbacks.splice(index, 1);\n\n        } else {\n          this.subscriptions[topic] = [];\n        }\n\n        if (this.subscriptions[topic].length === 0) {\n          delete this.subscriptions[topic];\n          await this.sub.unsubscribe(topic);\n        }\n\n        return this;\n    }\n\n    public async publish(topic: string, data: any) {\n        if (data === undefined) {\n            data = false;\n        }\n\n        await this.pub.publish(topic, JSON.stringify(data));\n    }\n\n    public async exists(roomId: string): Promise<boolean> {\n        return (await (this.pub as any).pubsub(\"channels\", roomId)).length > 0;\n    }\n\n    public async set(key: string, value: string) {\n      return new Promise((resolve) =>\n        this.pub.set(key, value, resolve));\n    }\n\n    public async setex(key: string, value: string, seconds: number) {\n      return new Promise((resolve) =>\n        this.pub.setex(key, seconds, value, resolve));\n    }\n\n    public async get(key: string) {\n        return new Promise((resolve, reject) => {\n            this.pub.get(key, (err, data) => {\n                if (err) { return reject(err); }\n                resolve(data);\n            });\n        });\n    }\n\n    public async del(roomId: string) {\n        return new Promise((resolve) => {\n            this.pub.del(roomId, resolve);\n        });\n    }\n\n    public async sadd(key: string, value: any) {\n        return new Promise((resolve) => {\n            this.pub.sadd(key, value, resolve);\n        });\n    }\n\n    public async smembers(key: string): Promise<string[]> {\n        return await this.pub.smembers(key);\n    }\n\n    public async sismember(key: string, field: string): Promise<number> {\n        return await this.pub.sismember(key, field);\n    }\n\n    public async srem(key: string, value: any) {\n        return await this.pub.srem(key, value);\n    }\n\n    public async scard(key: string) {\n        return await this.pub.scard(key);\n    }\n\n    public async sinter(...keys: string[]) {\n        return await this.pub.sinter(...keys);\n    }\n\n    public async hset(key: string, field: string, value: string) {\n        return await this.pub.hset(key, field, value);\n    }\n\n    public async hincrby(key: string, field: string, value: number) {\n        return new Promise<number>((resolve, reject) => {\n          this.pub.hincrby(key, field, value, (err, result) => {\n            if (err) return reject(err);\n            resolve(result);\n          });\n        });\n    }\n\n    public async hget(key: string, field: string) {\n        return await this.pub.hget(key, field);\n    }\n\n    public async hgetall(key: string) {\n        return await this.pub.hgetall(key);\n    }\n\n    public async hdel(key: string, field: string) {\n        return await this.pub.hdel(key, field);\n    }\n\n    public async hlen(key: string): Promise<number> {\n        return await this.pub.hlen(key);\n    }\n\n    public async incr(key: string): Promise<number> {\n        return await this.pub.incr(key);\n    }\n\n    public async decr(key: string): Promise<number> {\n        return await this.pub.decr(key);\n    }\n\n    public shutdown() {\n        this.sub.quit();\n        this.pub.quit();\n    }\n\n    protected handleSubscription = (channel, message) => {\n        if (this.subscriptions[channel]) {\n          for (let i = 0, l = this.subscriptions[channel].length; i < l; i++) {\n            this.subscriptions[channel][i](JSON.parse(message));\n          }\n        }\n    }\n\n}\n"],
  "mappings": "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",
  "names": []
}
