{
  "version": 3,
  "sources": ["../../src/matchmaker/controller.ts"],
  "sourcesContent": ["/**\n * Matchmaking controller\n * (for interoperability between different http frameworks, e.g. express, uWebSockets.js, etc)\n */\n\nimport { ErrorCode } from \"../Protocol\";\nimport { ServerError } from \"../errors/ServerError\";\nimport * as matchMaker from \"../MatchMaker\";\n\nexport default {\n  DEFAULT_CORS_HEADERS: {\n    'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\n    'Access-Control-Allow-Methods': 'OPTIONS, POST, GET',\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Max-Age': '2592000',\n    // ...\n  },\n\n  exposedMethods: ['joinOrCreate', 'create', 'join', 'joinById', 'reconnect'],\n  allowedRoomNameChars: /([a-zA-Z_\\-0-9]+)/gi,\n  matchmakeRoute: 'matchmake',\n\n  /**\n   * You can manually change the default corsHeaders by overwriting the `getCorsHeaders()` method:\n   *    ```\n   *    import { matchMaker } from \"@colyseus/core\";\n   *    matchMaker.controller.getCorsHeaders = function(req) {\n   *      if (req.headers.referer !== \"xxx\") {\n   *      }\n   *\n   *      return {\n   *        'Access-Control-Allow-Origin': 'safedomain.com',\n   *      }\n   *    }\n   *    ```\n   */\n  getCorsHeaders(request: any): { [header: string]: string } {\n    return {};\n  },\n\n  getAvailableRooms(roomName: string) {\n    /**\n     * list public & unlocked rooms\n     */\n    const conditions: any = {\n      locked: false,\n      private: false,\n    };\n    if (roomName) {\n      conditions[\"name\"] = roomName;\n    }\n    return matchMaker.query(conditions);\n  },\n\n  async invokeMethod(method: string, roomName: string, clientOptions: any = {}) {\n    if (this.exposedMethods.indexOf(method) === -1) {\n      throw new ServerError(ErrorCode.MATCHMAKE_NO_HANDLER, `invalid method \"${method}\"`);\n    }\n\n    try {\n      return await matchMaker[method](roomName, clientOptions);\n\n    } catch (e) {\n      throw new ServerError(e.code || ErrorCode.MATCHMAKE_UNHANDLED, e.message);\n    }\n  }\n\n}\n\n"],
  "mappings": "AAKA,SAAS,iBAAiB;AAC1B,SAAS,mBAAmB;AAC5B,YAAY,gBAAgB;AAE5B,IAAO,qBAAQ;AAAA,EACb,sBAAsB;AAAA,IACpB,gCAAgC;AAAA,IAChC,gCAAgC;AAAA,IAChC,+BAA+B;AAAA,IAC/B,0BAA0B;AAAA,EAE5B;AAAA,EAEA,gBAAgB,CAAC,gBAAgB,UAAU,QAAQ,YAAY,WAAW;AAAA,EAC1E,sBAAsB;AAAA,EACtB,gBAAgB;AAAA,EAgBhB,eAAe,SAA4C;AACzD,WAAO,CAAC;AAAA,EACV;AAAA,EAEA,kBAAkB,UAAkB;AAIlC,UAAM,aAAkB;AAAA,MACtB,QAAQ;AAAA,MACR,SAAS;AAAA,IACX;AACA,QAAI,UAAU;AACZ,iBAAW,UAAU;AAAA,IACvB;AACA,WAAO,WAAW,MAAM,UAAU;AAAA,EACpC;AAAA,EAEA,MAAM,aAAa,QAAgB,UAAkB,gBAAqB,CAAC,GAAG;AAC5E,QAAI,KAAK,eAAe,QAAQ,MAAM,MAAM,IAAI;AAC9C,YAAM,IAAI,YAAY,UAAU,sBAAsB,mBAAmB,SAAS;AAAA,IACpF;AAEA,QAAI;AACF,aAAO,MAAM,WAAW,QAAQ,UAAU,aAAa;AAAA,IAEzD,SAAS,GAAP;AACA,YAAM,IAAI,YAAY,EAAE,QAAQ,UAAU,qBAAqB,EAAE,OAAO;AAAA,IAC1E;AAAA,EACF;AAEF;",
  "names": []
}
