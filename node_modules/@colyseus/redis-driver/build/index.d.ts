import { ClusterNode, ClusterOptions, RedisOptions } from 'ioredis';
import { IRoomListingData, MatchMakerDriver, QueryHelpers, RoomListingData } from '@colyseus/core';
import { RoomData } from './RoomData';
export declare class RedisDriver implements MatchMakerDriver {
    private readonly _client;
    constructor(options?: number | string | RedisOptions | ClusterNode[], clusterOptions?: ClusterOptions);
    createInstance(initialValues?: any): RoomData;
    has(roomId: string): Promise<boolean>;
    find(conditions: any): Promise<RoomData[]>;
    findOne(conditions: Partial<IRoomListingData>): QueryHelpers<RoomListingData>;
    getRooms(): Promise<RoomData[]>;
    shutdown(): Promise<void>;
    clear(): void;
}
