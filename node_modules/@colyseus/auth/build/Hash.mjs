// packages/auth/src/Hash.ts
import crypto from "crypto";
var Hash = class {
  static {
    this.algorithm = "scrypt";
  }
  static {
    this.algorithms = {
      "sha1": (password, salt) => crypto.createHash("sha1").update(password + salt).digest("hex"),
      "scrypt": (password, salt) => new Promise((resolve, reject) => {
        crypto.scrypt(password, salt, 64, (err, derivedKey) => {
          if (err) reject(err);
          resolve(derivedKey.toString("hex"));
        });
      })
    };
  }
  /**
   * Make a hash from a password
   *
   * @param password Password to be hashed
   * @param salt Password salt
   *
   * @returns Hashed password
   */
  static async make(password, salt = process.env.AUTH_SALT || "## SALT ##") {
    return await this.algorithms[this.algorithm](password, salt);
  }
};
export {
  Hash
};
