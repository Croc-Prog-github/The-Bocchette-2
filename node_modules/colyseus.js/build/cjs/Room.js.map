{"version":3,"file":"Room.js","sources":["../../src/Room.ts"],"sourcesContent":["import { Connection } from './Connection';\nimport { Protocol } from './Protocol';\nimport { getSerializer, Serializer } from './serializer/Serializer';\n\n// The unused imports here are important for better `.d.ts` file generation\n// (Later merged with `dts-bundle-generator`)\nimport { createNanoEvents } from './core/nanoevents';\nimport { createSignal } from './core/signal';\n\nimport { decode, encode, Iterator } from '@colyseus/schema';\nimport { SchemaConstructor, SchemaSerializer } from './serializer/SchemaSerializer';\nimport { CloseCode } from './errors/ServerError';\n\nimport { Packr, unpack } from '@colyseus/msgpackr';\n\nexport interface RoomAvailable<Metadata = any> {\n    name: string;\n    roomId: string;\n    clients: number;\n    maxClients: number;\n    metadata?: Metadata;\n}\n\nexport class Room<State= any> {\n    public roomId: string;\n    public sessionId: string;\n    public reconnectionToken: string;\n\n    public name: string;\n    public connection: Connection;\n\n    // Public signals\n    public onStateChange = createSignal<(state: State) => void>();\n    public onError = createSignal<(code: number, message?: string) => void>();\n    public onLeave = createSignal<(code: number, reason?: string) => void>();\n    protected onJoin = createSignal();\n\n    public serializerId: string;\n    public serializer: Serializer<State>;\n\n    protected hasJoined: boolean = false;\n\n    // TODO: remove me on 1.0.0\n    protected rootSchema: SchemaConstructor<State>;\n\n    protected onMessageHandlers = createNanoEvents();\n\n    protected packr: Packr;\n\n    constructor(name: string, rootSchema?: SchemaConstructor<State>) {\n        this.roomId = null;\n        this.name = name;\n\n        this.packr = new Packr();\n\n        // msgpackr workaround: force buffer to be created.\n        this.packr.encode(undefined);\n\n        if (rootSchema) {\n            this.serializer = new (getSerializer(\"schema\"));\n            this.rootSchema = rootSchema;\n            (this.serializer as SchemaSerializer).state = new rootSchema();\n        }\n\n        this.onError((code, message) => console.warn?.(`colyseus.js - onError => (${code}) ${message}`));\n        this.onLeave(() => this.removeAllListeners());\n    }\n\n    public connect(\n        endpoint: string,\n        devModeCloseCallback?: () => void,\n        room: Room = this, // when reconnecting on devMode, re-use previous room intance for handling events.\n        options?: any,\n    ) {\n        const connection = new Connection(options.protocol);\n        room.connection = connection;\n\n        connection.events.onmessage = Room.prototype.onMessageCallback.bind(room);\n        connection.events.onclose = function (e: CloseEvent) {\n            if (!room.hasJoined) {\n                console.warn?.(`Room connection was closed unexpectedly (${e.code}): ${e.reason}`);\n                room.onError.invoke(e.code, e.reason);\n                return;\n            }\n            if (e.code === CloseCode.DEVMODE_RESTART && devModeCloseCallback) {\n                devModeCloseCallback();\n            } else {\n                room.onLeave.invoke(e.code, e.reason);\n                room.destroy();\n            }\n        };\n        connection.events.onerror = function (e: CloseEvent) {\n            console.warn?.(`Room, onError (${e.code}): ${e.reason}`);\n            room.onError.invoke(e.code, e.reason);\n        };\n\n        // FIXME: refactor this.\n        if (options.protocol === \"h3\") {\n            const url = new URL(endpoint);\n            connection.connect(url.origin, options);\n\n        } else {\n            connection.connect(endpoint);\n        }\n\n    }\n\n    public leave(consented: boolean = true): Promise<number> {\n        return new Promise((resolve) => {\n            this.onLeave((code) => resolve(code));\n\n            if (this.connection) {\n                if (consented) {\n                    this.packr.buffer[0] = Protocol.LEAVE_ROOM;\n                    this.connection.send(this.packr.buffer.subarray(0, 1));\n\n                } else {\n                    this.connection.close();\n                }\n\n            } else {\n                this.onLeave.invoke(CloseCode.CONSENTED);\n            }\n        });\n    }\n\n    public onMessage<T = any>(type: \"*\", callback: (type: string | number, message: T) => void)\n    public onMessage<T = any>(type: string | number, callback: (message: T) => void)\n    public onMessage(type: '*' | string | number, callback: (...args: any[]) => void) {\n        return this.onMessageHandlers.on(this.getMessageHandlerKey(type), callback);\n    }\n\n    public send<T = any>(type: string | number, message?: T): void {\n        const it: Iterator = { offset: 1 };\n        this.packr.buffer[0] = Protocol.ROOM_DATA;\n\n        if (typeof(type) === \"string\") {\n            encode.string(this.packr.buffer, type, it);\n\n        } else {\n            encode.number(this.packr.buffer, type, it);\n        }\n\n        // force packr to use beginning of the buffer\n        this.packr.position = 0;\n\n        const data = (message !== undefined)\n            ? this.packr.pack(message, 2048 + it.offset) // 2048 = RESERVE_START_SPACE\n            : this.packr.buffer.subarray(0, it.offset);\n\n        this.connection.send(data);\n    }\n\n    public sendUnreliable<T = any>(type: string | number, message?: T): void {\n        const it: Iterator = { offset: 1 };\n        this.packr.buffer[0] = Protocol.ROOM_DATA;\n\n        if (typeof(type) === \"string\") {\n            encode.string(this.packr.buffer, type, it);\n\n        } else {\n            encode.number(this.packr.buffer, type, it);\n        }\n\n        // force packr to use beginning of the buffer\n        this.packr.position = 0;\n\n        const data = (message !== undefined)\n            ? this.packr.pack(message, 2048 + it.offset) // 2048 = RESERVE_START_SPACE\n            : this.packr.buffer.subarray(0, it.offset);\n\n        this.connection.sendUnreliable(data);\n    }\n\n    public sendBytes(type: string | number, bytes: Uint8Array) {\n        const it: Iterator = { offset: 1 };\n        this.packr.buffer[0] = Protocol.ROOM_DATA_BYTES;\n\n        if (typeof(type) === \"string\") {\n            encode.string(this.packr.buffer, type, it);\n\n        } else {\n            encode.number(this.packr.buffer, type, it);\n        }\n\n        // check if buffer needs to be resized\n        // TODO: can we avoid this?\n        if (bytes.byteLength + it.offset > this.packr.buffer.byteLength) {\n            const newBuffer = new Uint8Array(it.offset + bytes.byteLength);\n            newBuffer.set(this.packr.buffer);\n            this.packr.useBuffer(newBuffer);\n        }\n\n        this.packr.buffer.set(bytes, it.offset);\n        this.connection.send(this.packr.buffer.subarray(0, it.offset + bytes.byteLength));\n    }\n\n    public get state (): State {\n        return this.serializer.getState();\n    }\n\n    public removeAllListeners() {\n        this.onJoin.clear();\n        this.onStateChange.clear();\n        this.onError.clear();\n        this.onLeave.clear();\n        this.onMessageHandlers.events = {};\n\n        if (this.serializer instanceof SchemaSerializer) {\n            // Remove callback references\n            this.serializer.decoder.root.callbacks = {};\n        }\n    }\n\n    protected onMessageCallback(event: MessageEvent) {\n        const buffer = new Uint8Array(event.data);\n\n        const it: Iterator = { offset: 1 };\n        const code = buffer[0];\n\n        if (code === Protocol.JOIN_ROOM) {\n            const reconnectionToken = decode.utf8Read(buffer, it, buffer[it.offset++]);\n            this.serializerId = decode.utf8Read(buffer, it, buffer[it.offset++]);\n\n            // Instantiate serializer if not locally available.\n            if (!this.serializer) {\n                const serializer = getSerializer(this.serializerId);\n                this.serializer = new serializer();\n            }\n\n            if (buffer.byteLength > it.offset && this.serializer.handshake) {\n                this.serializer.handshake(buffer, it);\n            }\n\n            this.reconnectionToken = `${this.roomId}:${reconnectionToken}`;\n\n            this.hasJoined = true;\n            this.onJoin.invoke();\n\n            // acknowledge successfull JOIN_ROOM\n            this.packr.buffer[0] = Protocol.JOIN_ROOM;\n            this.connection.send(this.packr.buffer.subarray(0, 1));\n\n        } else if (code === Protocol.ERROR) {\n            const code = decode.number(buffer, it);\n            const message = decode.string(buffer, it);\n\n            this.onError.invoke(code, message);\n\n        } else if (code === Protocol.LEAVE_ROOM) {\n            this.leave();\n\n        } else if (code === Protocol.ROOM_STATE) {\n            this.serializer.setState(buffer, it);\n            this.onStateChange.invoke(this.serializer.getState());\n\n        } else if (code === Protocol.ROOM_STATE_PATCH) {\n            this.serializer.patch(buffer, it);\n            this.onStateChange.invoke(this.serializer.getState());\n\n        } else if (code === Protocol.ROOM_DATA) {\n            const type = (decode.stringCheck(buffer, it))\n                ? decode.string(buffer, it)\n                : decode.number(buffer, it);\n\n            const message = (buffer.byteLength > it.offset)\n                ? unpack(buffer, { start: it.offset })\n                : undefined;\n\n            this.dispatchMessage(type, message);\n\n        } else if (code === Protocol.ROOM_DATA_BYTES) {\n            const type = (decode.stringCheck(buffer, it))\n                ? decode.string(buffer, it)\n                : decode.number(buffer, it);\n\n            this.dispatchMessage(type, buffer.subarray(it.offset));\n        }\n    }\n\n    private dispatchMessage(type: string | number, message: any) {\n        const messageType = this.getMessageHandlerKey(type);\n\n        if (this.onMessageHandlers.events[messageType]) {\n            this.onMessageHandlers.emit(messageType, message);\n\n        } else if (this.onMessageHandlers.events['*']) {\n            this.onMessageHandlers.emit('*', type, message);\n\n        } else {\n            console.warn?.(`colyseus.js: onMessage() not registered for type '${type}'.`);\n        }\n    }\n\n    private destroy () {\n        if (this.serializer) {\n            this.serializer.teardown();\n        }\n    }\n\n    private getMessageHandlerKey(type: string | number): string {\n        switch (typeof(type)) {\n            // string\n            case \"string\": return type;\n\n            // number\n            case \"number\": return `i${type}`;\n\n            default: throw new Error(\"invalid message type.\");\n        }\n    }\n\n}\n"],"names":["createSignal","createNanoEvents","Packr","getSerializer","Connection","CloseCode","Protocol","encode","SchemaSerializer","decode","unpack"],"mappings":"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"}