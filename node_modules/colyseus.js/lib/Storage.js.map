{"version":3,"file":"Storage.js","sourceRoot":"","sources":["../src/Storage.ts"],"names":[],"mappings":";AAAA,sDAAsD;;AAmCtD,0BAEC;AAED,gCAEC;AAED,0BAcC;AAvDD;;;;GAIG;AAEH,IAAI,OAAY,CAAC;AAEjB,SAAS,UAAU;IACf,IAAI,CAAC,OAAO,EAAG,CAAC;QACZ,IAAI,CAAC;YACD,OAAO,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,WAAW,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC;gBACpE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,YAAY,CAAE,mCAAmC;gBAC1D,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,4EAA4E;QAE3G,CAAC;QAAC,OAAO,CAAC,EAAE,CAAC;YACT,eAAe;QACnB,CAAC;IACL,CAAC;IAED,IAAI,CAAC,OAAO,EAAE,CAAC;QACX,iEAAiE;QACjE,OAAO,GAAG;YACN,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,UAAU,GAAG,EAAE,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;YAC3D,OAAO,EAAE,UAAU,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC5C,UAAU,EAAE,UAAU,GAAG,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SACzD,CAAC;IACN,CAAC;IAED,OAAO,OAAO,CAAC;AACnB,CAAC;AAED,SAAgB,OAAO,CAAC,GAAW,EAAE,KAAa;IAC9C,UAAU,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACrC,CAAC;AAED,SAAgB,UAAU,CAAC,GAAW;IAClC,UAAU,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AACjC,CAAC;AAED,SAAgB,OAAO,CAAC,GAAW,EAAE,QAAkB;IACnD,MAAM,KAAK,GAAQ,UAAU,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAE7C,IACI,OAAO,CAAC,OAAO,CAAC,KAAK,WAAW,IAAI,eAAe;QACnD,CAAC,CAAC,KAAK,YAAY,OAAO,CAAC,EAC7B,CAAC;QACC,iCAAiC;QACjC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAEpB,CAAC;SAAM,CAAC;QACJ,+BAA+B;QAC/B,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,CAAC;AACL,CAAC","sourcesContent":["/// <reference path=\"../typings/cocos-creator.d.ts\" />\n\n/**\n * We do not assign 'storage' to window.localStorage immediatelly for React\n * Native compatibility. window.localStorage is not present when this module is\n * loaded.\n */\n\nlet storage: any;\n\nfunction getStorage(): Storage {\n    if (!storage)  {\n        try {\n            storage = (typeof (cc) !== 'undefined' && cc.sys && cc.sys.localStorage)\n                ? cc.sys.localStorage  // compatibility with cocos creator\n                : window.localStorage; // RN does have window object at this point, but localStorage is not defined\n\n        } catch (e) {\n            // ignore error\n        }\n    }\n\n    if (!storage) {\n        // mock localStorage if not available (Node.js or RN environment)\n        storage = {\n            cache: {},\n            setItem: function (key, value) { this.cache[key] = value; },\n            getItem: function (key) { this.cache[key]; },\n            removeItem: function (key) { delete this.cache[key]; },\n        };\n    }\n\n    return storage;\n}\n\nexport function setItem(key: string, value: string) {\n    getStorage().setItem(key, value);\n}\n\nexport function removeItem(key: string) {\n    getStorage().removeItem(key);\n}\n\nexport function getItem(key: string, callback: Function) {\n    const value: any = getStorage().getItem(key);\n\n    if (\n        typeof (Promise) === 'undefined' || // old browsers\n        !(value instanceof Promise)\n    ) {\n        // browser has synchronous return\n        callback(value);\n\n    } else {\n        // react-native is asynchronous\n        value.then((id) => callback(id));\n    }\n}\n"]}