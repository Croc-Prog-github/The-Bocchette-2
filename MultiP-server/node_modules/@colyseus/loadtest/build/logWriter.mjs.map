{"version":3,"file":"logWriter.mjs","sources":["../src/logWriter.ts"],"sourcesContent":["import path from \"path\";\nimport fs from \"fs\";\n\nlet handle: fs.WriteStream;\nlet isClosing: boolean = false;\n\nexport function create (filepath: string) {\n    if (fs.existsSync(filepath)) {\n        const moveTo = `${path.basename(filepath)}.bkp`;\n        console.log(`Moving previous \"${path.basename(filepath)}\" file to \"${moveTo}\"`);\n        fs.renameSync(filepath, path.resolve(path.dirname(filepath), moveTo));\n    }\n    handle = fs.createWriteStream(filepath);\n}\n\nexport function write(contents: any, close?: boolean) {\n    if (!handle || isClosing) {\n        return;\n    }\n\n    if (close) {\n        isClosing = true;\n    }\n\n    return new Promise<void>((resolve, reject) => {\n        const now = new Date();\n        handle.write(`[${now.toLocaleString()}] ${contents}\\n`, (err) => {\n            if (err) { return reject(err); }\n            if (isClosing) { handle.close(); }\n            resolve();\n        });\n\n    })\n}\n\n\n"],"names":[],"mappings":";;;AAGA,IAAI,MAAsB,CAAC;AAC3B,IAAI,SAAS,GAAY,KAAK,CAAC;SAEf,MAAM,CAAE,QAAgB;IACpC,IAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;QACzB,MAAM,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;QAChD,OAAO,CAAC,GAAG,CAAC,oBAAoB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,cAAc,MAAM,GAAG,CAAC,CAAC;QAChF,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;KACzE;IACD,MAAM,GAAG,EAAE,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;AAC5C,CAAC;SAEe,KAAK,CAAC,QAAa,EAAE,KAAe;IAChD,IAAI,CAAC,MAAM,IAAI,SAAS,EAAE;QACtB,OAAO;KACV;IAED,IAAI,KAAK,EAAE;QACP,SAAS,GAAG,IAAI,CAAC;KACpB;IAED,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM;QACrC,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,cAAc,EAAE,KAAK,QAAQ,IAAI,EAAE,CAAC,GAAG;YACxD,IAAI,GAAG,EAAE;gBAAE,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;aAAE;YAChC,IAAI,SAAS,EAAE;gBAAE,MAAM,CAAC,KAAK,EAAE,CAAC;aAAE;YAClC,OAAO,EAAE,CAAC;SACb,CAAC,CAAC;KAEN,CAAC,CAAA;AACN;;;;"}