{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import \"./Room.ext\";\n\nimport { Server } from \"@colyseus/core\";\nimport { ConfigOptions, listen } from \"@colyseus/tools\";\nimport { ColyseusTestServer } from \"./TestServer\";\n\nconst DEFAULT_TEST_PORT = 2568;\n\nexport async function boot(config: ConfigOptions | Server, port: number = DEFAULT_TEST_PORT) {\n  if (config instanceof Server) {\n    const gameServer = config;\n    await gameServer.listen(DEFAULT_TEST_PORT);\n    return new ColyseusTestServer(gameServer);\n\n  } else {\n    if (!config.options) { config.options = {}; }\n\n    // override server options for testing.\n    config.options.greet = false;\n    config.options.gracefullyShutdown = false;\n\n    // Force LocalDriver & LocalPresence ??\n    // config.options.driver = new LocalDriver();\n    // config.options.presence = new LocalPresence();\n\n    const gameServer = await listen({ ...config, displayLogs: false, }, port);\n    return new ColyseusTestServer(gameServer);\n  }\n}\n\nexport { ColyseusTestServer };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAO;AAEP,kBAAuB;AACvB,mBAAsC;AACtC,wBAAmC;AAEnC,MAAM,oBAAoB;AAE1B,eAAsB,KAAK,QAAgC,OAAe,mBAAmB;AAC3F,MAAI,kBAAkB,oBAAQ;AAC5B,UAAM,aAAa;AACnB,UAAM,WAAW,OAAO,iBAAiB;AACzC,WAAO,IAAI,qCAAmB,UAAU;AAAA,EAE1C,OAAO;AACL,QAAI,CAAC,OAAO,SAAS;AAAE,aAAO,UAAU,CAAC;AAAA,IAAG;AAG5C,WAAO,QAAQ,QAAQ;AACvB,WAAO,QAAQ,qBAAqB;AAMpC,UAAM,aAAa,UAAM,qBAAO,EAAE,GAAG,QAAQ,aAAa,MAAO,GAAG,IAAI;AACxE,WAAO,IAAI,qCAAmB,UAAU;AAAA,EAC1C;AACF;",
  "names": []
}
