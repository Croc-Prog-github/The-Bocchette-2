{
  "version": 3,
  "sources": ["../../src/matchmaker/Lobby.ts"],
  "sourcesContent": ["import * as matchMaker from '../MatchMaker';\n\nimport type { Room } from '../Room';\nimport { RoomListingData } from './driver/interfaces';\n\nconst LOBBY_CHANNEL = '$lobby';\n\nexport function updateLobby(room: Room, removed: boolean = false) {\n  const listing = room.listing;\n\n  if (!listing.unlisted && !listing.private) {\n    matchMaker.presence.publish(LOBBY_CHANNEL, `${listing.roomId},${removed ? 1 : 0}`);\n  }\n}\n\nexport async function subscribeLobby(callback: (roomId: string, roomListing: RoomListingData) => void) {\n  const cb = async (message) => {\n    const [roomId, isRemove] = message.split(',');\n\n    if (isRemove === '1') {\n      callback(roomId, null);\n\n    } else {\n      const room = (await matchMaker.query({ roomId }))[0];\n      callback(roomId, room);\n    }\n  };\n\n  await matchMaker.presence.subscribe(LOBBY_CHANNEL, cb);\n\n  return () => matchMaker.presence.unsubscribe(LOBBY_CHANNEL, cb);\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA4B;AAK5B,MAAM,gBAAgB;AAEf,SAAS,YAAY,MAAY,UAAmB,OAAO;AAChE,QAAM,UAAU,KAAK;AAErB,MAAI,CAAC,QAAQ,YAAY,CAAC,QAAQ,SAAS;AACzC,eAAW,SAAS,QAAQ,eAAe,GAAG,QAAQ,UAAU,UAAU,IAAI,GAAG;AAAA,EACnF;AACF;AAEA,eAAsB,eAAe,UAAkE;AACrG,QAAM,KAAK,OAAO,YAAY;AAC5B,UAAM,CAAC,QAAQ,QAAQ,IAAI,QAAQ,MAAM,GAAG;AAE5C,QAAI,aAAa,KAAK;AACpB,eAAS,QAAQ,IAAI;AAAA,IAEvB,OAAO;AACL,YAAM,QAAQ,MAAM,WAAW,MAAM,EAAE,OAAO,CAAC,GAAG;AAClD,eAAS,QAAQ,IAAI;AAAA,IACvB;AAAA,EACF;AAEA,QAAM,WAAW,SAAS,UAAU,eAAe,EAAE;AAErD,SAAO,MAAM,WAAW,SAAS,YAAY,eAAe,EAAE;AAChE;",
  "names": []
}
