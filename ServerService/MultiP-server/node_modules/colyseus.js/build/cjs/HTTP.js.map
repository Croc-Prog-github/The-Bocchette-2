{"version":3,"file":"HTTP.js","sources":["../../src/HTTP.ts"],"sourcesContent":["import { Client } from \"./Client\";\nimport { ServerError } from \"./errors/ServerError\";\nimport * as httpie from \"httpie\";\n\nexport class HTTP {\n    public authToken: string;\n\n    constructor(protected client: Client) {}\n\n    public get<T = any>(path: string, options: Partial<httpie.Options> = {}): Promise<httpie.Response<T>> {\n        return this.request(\"get\", path, options);\n    }\n\n    public post<T = any>(path: string, options: Partial<httpie.Options> = {}): Promise<httpie.Response<T>> {\n        return this.request(\"post\", path, options);\n    }\n\n    public del<T = any>(path: string, options: Partial<httpie.Options> = {}): Promise<httpie.Response<T>> {\n        return this.request(\"del\", path, options);\n    }\n\n    public put<T = any>(path: string, options: Partial<httpie.Options> = {}): Promise<httpie.Response<T>> {\n        return this.request(\"put\", path, options);\n    }\n\n    protected request(method: \"get\" | \"post\" | \"put\" | \"del\", path: string, options: Partial<httpie.Options> = {}): Promise<httpie.Response> {\n        return httpie[method](this.client['getHttpEndpoint'](path), this.getOptions(options)).catch((e: any) => {\n            throw new ServerError(e.statusCode || -1, e.data?.error || e.statusMessage || e.message || \"offline\");\n        });\n    }\n\n    protected getOptions(options: Partial<httpie.Options>) {\n        if (this.authToken) {\n            if (!options.headers) {\n                options.headers = {};\n            }\n\n            options.headers['Authorization'] = `Bearer ${this.authToken}`;\n            options.withCredentials = true;\n        }\n\n        return options;\n    }\n}\n"],"names":["httpie","ServerError"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAA,IAAA,kBAAA,YAAA;AAGI,IAAA,SAAA,IAAA,CAAsB,MAAc,EAAA;QAAd,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;KAAI;AAEjC,IAAA,IAAA,CAAA,SAAA,CAAA,GAAG,GAAV,UAAoB,IAAY,EAAE,OAAqC,EAAA;AAArC,QAAA,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA,EAAA,OAAqC,GAAA,EAAA,CAAA,EAAA;QACnE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;KAC7C,CAAA;AAEM,IAAA,IAAA,CAAA,SAAA,CAAA,IAAI,GAAX,UAAqB,IAAY,EAAE,OAAqC,EAAA;AAArC,QAAA,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA,EAAA,OAAqC,GAAA,EAAA,CAAA,EAAA;QACpE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;KAC9C,CAAA;AAEM,IAAA,IAAA,CAAA,SAAA,CAAA,GAAG,GAAV,UAAoB,IAAY,EAAE,OAAqC,EAAA;AAArC,QAAA,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA,EAAA,OAAqC,GAAA,EAAA,CAAA,EAAA;QACnE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;KAC7C,CAAA;AAEM,IAAA,IAAA,CAAA,SAAA,CAAA,GAAG,GAAV,UAAoB,IAAY,EAAE,OAAqC,EAAA;AAArC,QAAA,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA,EAAA,OAAqC,GAAA,EAAA,CAAA,EAAA;QACnE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;KAC7C,CAAA;AAES,IAAA,IAAA,CAAA,SAAA,CAAA,OAAO,GAAjB,UAAkB,MAAsC,EAAE,IAAY,EAAE,OAAqC,EAAA;AAArC,QAAA,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA,EAAA,OAAqC,GAAA,EAAA,CAAA,EAAA;QACzG,OAAOA,iBAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,CAAM,EAAA;;AAC/F,YAAA,MAAM,IAAIC,uBAAW,CAAC,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,EAAE,CAAA,CAAA,EAAA,GAAA,CAAC,CAAC,IAAI,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,KAAI,CAAC,CAAC,aAAa,IAAI,CAAC,CAAC,OAAO,IAAI,SAAS,CAAC,CAAC;AAC1G,SAAC,CAAC,CAAC;KACN,CAAA;IAES,IAAU,CAAA,SAAA,CAAA,UAAA,GAApB,UAAqB,OAAgC,EAAA;QACjD,IAAI,IAAI,CAAC,SAAS,EAAE;AAChB,YAAA,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;AAClB,gBAAA,OAAO,CAAC,OAAO,GAAG,EAAE,CAAC;AACxB,aAAA;YAED,OAAO,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,SAAA,CAAA,MAAA,CAAU,IAAI,CAAC,SAAS,CAAE,CAAC;AAC9D,YAAA,OAAO,CAAC,eAAe,GAAG,IAAI,CAAC;AAClC,SAAA;AAED,QAAA,OAAO,OAAO,CAAC;KAClB,CAAA;IACL,OAAC,IAAA,CAAA;AAAD,CAAC,EAAA;;;;"}